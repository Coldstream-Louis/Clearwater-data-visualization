{"remainingRequest":"/Users/chenyulei/Downloads/frontend18v/node_modules/thread-loader/dist/cjs.js!/Users/chenyulei/Downloads/frontend18v/node_modules/babel-loader/lib/index.js!/Users/chenyulei/Downloads/frontend18v/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/chenyulei/Downloads/frontend18v/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/chenyulei/Downloads/frontend18v/src/views/EnterRel.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/chenyulei/Downloads/frontend18v/src/views/EnterRel.vue","mtime":1553056840961},{"path":"/Users/chenyulei/Downloads/frontend18v/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chenyulei/Downloads/frontend18v/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chenyulei/Downloads/frontend18v/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/chenyulei/Downloads/frontend18v/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chenyulei/Downloads/frontend18v/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es7.promise.finally\";\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar axios = require('axios');\n\nexport default {\n  name: 'EnterRel',\n  data: function data() {\n    var _this = this;\n\n    var generateData2 = function generateData2(_) {\n      var data = [];\n      var cities = ['上海', '北京', '广州', '深圳', '南京', '西安', '成都'];\n      var pinyin = ['shanghai', 'beijing', 'guangzhou', 'shenzhen', 'nanjing', 'xian', 'chengdu'];\n      cities.forEach(function (city, index) {\n        data.push({\n          label: city,\n          key: index,\n          pinyin: pinyin[index]\n        });\n      });\n      return data;\n    };\n\n    var generateEntity = function generateEntity(_) {\n      var data = [];\n      var cities = ['上海', '北京', '广州', '深圳', '南京', '西安', '成都'];\n      var pinyin = ['shanghai', 'beijing', 'guangzhou', 'shenzhen', 'nanjing', 'xian', 'chengdu'];\n      axios.get('http://10.60.38.137:9999/api/getAllLabel').then(function (response) {\n        cities = response.data.Label;\n        _this.allEntity = cities;\n        _this.allProperty = cities;\n        cities.forEach(function (city, index) {\n          data.push({\n            label: city,\n            key: index,\n            pinyin: pinyin[index]\n          });\n        });\n      });\n      return data;\n    };\n\n    var generateProperty = function generateProperty(_) {\n      var data = [];\n      var cities = ['上海', '北京', '广州', '深圳', '南京', '西安', '成都'];\n      var pinyin = ['shanghai', 'beijing', 'guangzhou', 'shenzhen', 'nanjing', 'xian', 'chengdu'];\n      cities.forEach(function (city, index) {\n        data.push({\n          label: city,\n          key: index,\n          pinyin: pinyin[index]\n        });\n      });\n      return data;\n    };\n\n    return {\n      // data2: generateData2(),\n      form: {\n        entity: [],\n        relation: '',\n        property: [],\n        csv: 'result.csv'\n      },\n      entityOptions: [],\n      properties: [],\n      allEntityIndexed: generateEntity(),\n      allPropertyIndexed: generateProperty(),\n      allEntity: ['上海', '北京', '广州', '深圳', '南京', '西安', '成都'],\n      allProperty: ['上海', '北京', '广州', '深圳', '南京', '西安', '成都'],\n      entity: [],\n      property: [],\n      selectedOptions: [],\n      filterMethod: function filterMethod(query, item) {\n        console.log(item);\n        return item.pinyin.indexOf(query) > -1;\n      },\n      tableData4: [{\n        date: '2016-05-03',\n        name: '王小虎',\n        province: '上海',\n        city: '普陀区',\n        address: '上海市普陀区金沙江路 1518 弄',\n        zip: 200333\n      }, {\n        date: '2016-05-02',\n        name: '王小虎',\n        province: '上海',\n        city: '普陀区',\n        address: '上海市普陀区金沙江路 1518 弄',\n        zip: 200333\n      }, {\n        date: '2016-05-04',\n        name: '王小虎',\n        province: '上海',\n        city: '普陀区',\n        address: '上海市普陀区金沙江路 1518 弄',\n        zip: 200333\n      }, {\n        date: '2016-05-01',\n        name: '王小虎',\n        province: '上海',\n        city: '普陀区',\n        address: '上海市普陀区金沙江路 1518 弄',\n        zip: 200333\n      }, {\n        date: '2016-05-08',\n        name: '王小虎',\n        province: '上海',\n        city: '普陀区',\n        address: '上海市普陀区金沙江路 1518 弄',\n        zip: 200333\n      }, {\n        date: '2016-05-06',\n        name: '王小虎',\n        province: '上海',\n        city: '普陀区',\n        address: '上海市普陀区金沙江路 1518 弄',\n        zip: 200333\n      }, {\n        date: '2016-05-07',\n        name: '王小虎',\n        province: '上海',\n        city: '普陀区',\n        address: '上海市普陀区金沙江路 1518 弄',\n        zip: 200333\n      }],\n      options4: [],\n      csvOptions: [],\n      datasetOptions: [],\n      value9: [],\n      list: [],\n      loading: false,\n      states: [\"Alabama\", \"Alaska\", \"Arizona\", \"Arkansas\", \"California\", \"Colorado\", \"Connecticut\", \"Delaware\", \"Florida\", \"Georgia\", \"Hawaii\", \"Idaho\", \"Illinois\", \"Indiana\", \"Iowa\", \"Kansas\", \"Kentucky\", \"Louisiana\", \"Maine\", \"Maryland\", \"Massachusetts\", \"Michigan\", \"Minnesota\", \"Mississippi\", \"Missouri\", \"Montana\", \"Nebraska\", \"Nevada\", \"New Hampshire\", \"New Jersey\", \"New Mexico\", \"New York\", \"North Carolina\", \"North Dakota\", \"Ohio\", \"Oklahoma\", \"Oregon\", \"Pennsylvania\", \"Rhode Island\", \"South Carolina\", \"South Dakota\", \"Tennessee\", \"Texas\", \"Utah\", \"Vermont\", \"Virginia\", \"Washington\", \"West Virginia\", \"Wisconsin\", \"Wyoming\"]\n    };\n  },\n  methods: {\n    handleEntityChange: function handleEntityChange(value) {},\n    deleteRow: function deleteRow(index, rows) {\n      rows.splice(index, 1);\n    },\n    onDatasetChange: function onDatasetChange(value) {\n      var _this2 = this;\n\n      axios.get('http://10.60.38.137:9999/api/metricInfo?filename=' + value).then(function (response) {\n        var Container = response.data.Node;\n        var entity = [];\n        var firstCasc = {\n          label: value,\n          value: value\n        };\n        firstCasc.children = [];\n        Container.name.forEach(function (element) {\n          var secondCasc = {};\n          secondCasc.label = element;\n          secondCasc.value = element;\n          secondCasc.children = [];\n\n          for (var key in response.data) {\n            if (response.data.hasOwnProperty(key)) {\n              if (key == element) {\n                var containerElement = response.data[key];\n                var service = containerElement.place;\n                service.forEach(function (element) {\n                  entity.push(element);\n                });\n                delete containerElement.place;\n\n                for (var _key in containerElement) {\n                  if (containerElement.hasOwnProperty(_key)) {\n                    (function () {\n                      var element = containerElement[_key];\n                      var thirdCasc = {};\n                      thirdCasc.label = _key;\n                      thirdCasc.value = _key;\n                      thirdCasc.children = element;\n                      console.log(thirdCasc);\n                      var tempChildren = [];\n                      thirdCasc.children.forEach(function (element) {\n                        var temp = {};\n                        temp.label = element;\n                        temp.value = element;\n                        tempChildren.push(temp);\n                      });\n                      thirdCasc.children = tempChildren;\n                      console.log(thirdCasc); // console.log(children)\n\n                      secondCasc.children.push(thirdCasc);\n                    })();\n                  }\n                }\n              }\n            }\n          }\n\n          firstCasc.children.push(secondCasc);\n        });\n        var tempEntity = [];\n        entity.forEach(function (element) {\n          tempEntity.push({\n            label: element,\n            value: element\n          });\n        }); // this.form.entity = tempEntity;\n\n        _this2.options4 = tempEntity;\n        _this2.properties = [firstCasc];\n      });\n    },\n    onSubmit: function onSubmit() {\n      var _this3 = this;\n\n      var csv = '';\n      this.datasetOptions.forEach(function (element) {\n        if (element.value.indexOf(_this3.form.csv) > -1) {\n          csv = element.value;\n        }\n      });\n      axios.post('http://10.60.38.137:9999/api/addMetric?pod=' + this.form.property[2] + '&metric=' + this.form.property[3] + '&Type=' + this.form.property[1] + '&dateset=' + csv + '&relation=' + this.form.relation + '&nodeType=' + this.form.entity[0] + '&nodeName=' + this.form.entity[1]).then(function (response) {\n        var log = response.data.state;\n\n        _this3.$message({\n          message: log,\n          type: 'success'\n        });\n\n        _this3.tableData4.push({\n          entity: _this3.form.entity,\n          property: _this3.form.property[3],\n          relation: _this3.form.relation\n        });\n      }).catch(function (error) {\n        // handle error\n        console.log(error);\n\n        _this3.$message.error('出现错误，请稍后再试。');\n      });\n    },\n    onCancel: function onCancel() {\n      this.form = {\n        entity: [],\n        relation: '',\n        property: [],\n        csv: ''\n      };\n    },\n    transferClick: function transferClick() {\n      var _this4 = this;\n\n      this.entity.forEach(function (elementE) {\n        _this4.property.forEach(function (elementP) {\n          _this4.tableData4.push({\n            entity: _this4.allEntity[elementE],\n            property: _this4.allProperty[elementP]\n          });\n        });\n      });\n    },\n    remoteMethod: function remoteMethod(query) {\n      var _this5 = this;\n\n      if (query !== '') {\n        this.loading = true;\n        setTimeout(function () {\n          _this5.loading = false;\n          _this5.options4 = _this5.list.filter(function (item) {\n            return item.label.toLowerCase().indexOf(query.toLowerCase()) > -1;\n          });\n        }, 200);\n      } else {\n        this.options4 = [];\n      }\n    },\n    handleChange: function handleChange(value) {\n      console.log(value);\n    }\n  },\n  created: function created() {\n    var _this6 = this;\n\n    this.tableData4 = []; // this.form.property =\n\n    axios.get('http://10.60.38.137:9999/api/getCSV').then(function (response) {\n      response.data.CSV.forEach(function (element) {\n        _this6.csvOptions.push({\n          label: element,\n          value: element\n        });\n      });\n      axios.get('http://10.60.38.137:9999/api/metricInfo?filename=' + _this6.csvOptions[0].label).then(function (response) {\n        var Container = response.data.Node;\n        var entity = [];\n        var firstCasc = {\n          label: _this6.csvOptions[0].label,\n          value: _this6.csvOptions[0].label\n        };\n        firstCasc.children = [];\n        Container.name.forEach(function (element) {\n          var secondCasc = {};\n          secondCasc.label = element;\n          secondCasc.value = element;\n          secondCasc.children = [];\n\n          for (var key in response.data) {\n            if (response.data.hasOwnProperty(key)) {\n              if (key == element) {\n                var containerElement = response.data[key];\n                var service = containerElement.place;\n                service.forEach(function (element) {\n                  entity.push(element);\n                });\n                delete containerElement.place;\n\n                for (var _key2 in containerElement) {\n                  if (containerElement.hasOwnProperty(_key2)) {\n                    (function () {\n                      var element = containerElement[_key2];\n                      var thirdCasc = {};\n                      thirdCasc.label = _key2;\n                      thirdCasc.value = _key2;\n                      thirdCasc.children = element;\n                      var tempChildren = [];\n                      thirdCasc.children.forEach(function (element) {\n                        var temp = {};\n                        temp.label = element;\n                        temp.value = element;\n                        tempChildren.push(temp);\n                      });\n                      thirdCasc.children = tempChildren;\n                      console.log(thirdCasc); // console.log(children)\n\n                      secondCasc.children.push(thirdCasc);\n                    })();\n                  }\n                }\n              }\n            }\n          }\n\n          firstCasc.children.push(secondCasc);\n        });\n        var tempEntity = [];\n        entity.forEach(function (element) {\n          tempEntity.push({\n            label: element,\n            value: element\n          });\n        }); // this.form.entity = tempEntity;\n\n        _this6.options4 = tempEntity;\n        _this6.properties = [firstCasc];\n      });\n    });\n    axios.get('http://10.60.38.137:9999/api/getDataset').then(function (response) {\n      response.data.nodes.forEach(function (element) {\n        _this6.datasetOptions.push({\n          label: element.name,\n          value: element.name\n        });\n      });\n    });\n\n    var initDeploymentNode = function initDeploymentNode() {\n      return axios.get('http://10.60.38.137:9999/api/getLabel?label=Deployment_Node');\n    };\n\n    var initServiceNode = function initServiceNode() {\n      return axios.get('http://10.60.38.137:9999/api/getLabel?label=Service_Node');\n    };\n\n    var initContainerNode = function initContainerNode() {\n      return axios.get('http://10.60.38.137:9999/api/getLabel?label=Container_Node');\n    };\n\n    axios.all([initDeploymentNode(), initServiceNode(), initContainerNode()]).then(axios.spread(function (responseDeployment, responseService, responseContainer) {\n      var deployChildren = [];\n      responseDeployment.data.nodes.forEach(function (element) {\n        if (element.type == 'Deployment_Node') {\n          deployChildren.push({\n            value: element.name,\n            label: element.name\n          });\n        }\n      });\n      var serviceChildren = [];\n      responseService.data.nodes.forEach(function (element) {\n        if (element.type == 'Service_Node') {\n          serviceChildren.push({\n            value: element.name,\n            label: element.name\n          });\n        }\n      });\n      var containerChildren = [];\n      responseContainer.data.nodes.forEach(function (element) {\n        if (element.type == 'Container_Node') {\n          containerChildren.push({\n            value: element.name,\n            label: element.name\n          });\n        }\n      });\n      console.log(deployChildren);\n      console.log(serviceChildren);\n      console.log(containerChildren);\n      _this6.entityOptions = [{\n        value: 'Deployment_Node',\n        label: 'Deployment Node',\n        children: deployChildren\n      }, {\n        value: 'Service_Node',\n        label: 'Service Node',\n        children: serviceChildren\n      }, {\n        value: 'Container_Node',\n        label: 'Container Node',\n        children: containerChildren\n      }];\n      console.log(_this6.entityOptions);\n    }));\n  },\n  mounted: function mounted() {\n    this.list = this.states.map(function (item) {\n      return {\n        value: item,\n        label: item\n      };\n    });\n  }\n};",{"version":3,"sources":["EnterRel.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <el-container style=\"padding:30px;\">\n        <el-row :gutter=\"20\" style=\"width:100%\">\n            <el-col :span=\"10\">\n                <!-- <el-row>\n                    <el-transfer filterable :filter-method=\"filterMethod\" filter-placeholder=\"请输入实体拼音\" v-model=\"entity\"\n                        :data=\"allEntityIndexed\" :titles=\"['Entities', 'Selected']\">\n                    </el-transfer>\n                </el-row>\n\n                <el-row style=\"margin-top:30px;\">\n                    <el-transfer filterable :filter-method=\"filterMethod\" filter-placeholder=\"请输入属性拼音\" v-model=\"property\"\n                        :data=\"allEntityIndexed\" :titles=\"['Properties', 'Selected']\">\n                        \n                    </el-transfer>\n                </el-row> -->\n                <el-form ref=\"form\" :model=\"form\" label-width=\"100px\">\n                    <el-form-item label=\"选择数据集\">\n                        <el-select v-model=\"form.csv\" placeholder=\"请选择\" @change=\"onDatasetChange\">\n                            <el-option v-for=\"item in csvOptions\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\">\n                            </el-option>\n                        </el-select>\n                    </el-form-item>\n                    <el-form-item label=\"实体名称\">\n                        <!-- <el-select v-model=\"form.entity\" filterable remote reserve-keyword placeholder=\"请输入关键词\"\n                            :remote-method=\"remoteMethod\" :loading=\"loading\">\n                            <el-option v-for=\"item in options4\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\">\n                            </el-option>\n                        </el-select> -->\n                        <el-cascader expand-trigger=\"hover\" :options=\"entityOptions\" v-model=\"form.entity\" @change=\"handleEntityChange\">\n                        </el-cascader>\n                    </el-form-item>\n                    <el-form-item label=\"属性名称\">\n                        <!-- <el-select v-model=\"form.property\" multiple filterable remote reserve-keyword placeholder=\"请输入关键词\"\n                            :remote-method=\"remoteMethod\" :loading=\"loading\">\n                            <el-option v-for=\"item in options4\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\">\n                            </el-option>\n                        </el-select> -->\n                        <el-cascader expand-trigger=\"hover\" :options=\"properties\" v-model=\"form.property\" @change=\"handleChange\">\n                        </el-cascader>\n                    </el-form-item>\n                    <el-form-item label=\"关系\">\n                        <el-input placeholder=\"请输入关系\" v-model=\"form.relation\" clearable>\n                        </el-input>\n                    </el-form-item>\n                    <el-form-item>\n                        <el-button type=\"primary\" @click=\"onSubmit\">添加</el-button>\n                        <el-button @click=\"onCancel\">取消</el-button>\n                    </el-form-item>\n                </el-form>\n            </el-col>\n\n            <!-- <el-col :span=\"2\" style=\"height:100%\">\n                <el-button type=\"success\" icon=\"el-icon-check\" circle style=\"margin-top:200px\" @click=\"transferClick\"></el-button>\n            </el-col> -->\n\n            <el-col :span=\"12\" :offset=\"2\">\n                <el-table :data=\"tableData4\" style=\"width: 100%\" max-height=\"500\">\n                    <el-table-column prop=\"entity\" label=\"实体\" width=\"100\">\n                    </el-table-column>\n                    <el-table-column prop=\"property\" label=\"属性\" width=\"200\">\n                    </el-table-column>\n                    <el-table-column prop=\"relation\" label=\"关系\" width=\"150\">\n                    </el-table-column>\n                    <el-table-column fixed=\"right\" label=\"操作\" width=\"120\">\n                        <template slot-scope=\"scope\">\n                            <el-button @click.native.prevent=\"deleteRow(scope.$index, tableData4)\" type=\"text\" size=\"small\">\n                                移除\n                            </el-button>\n                        </template>\n                    </el-table-column>\n                </el-table>\n            </el-col>\n        </el-row>\n\n    </el-container>\n\n</template>\n\n<style scoped>\n</style>\n\n<script>\n    const axios = require('axios')\n    export default {\n        name: 'EnterRel',\n        data() {\n            const generateData2 = _ => {\n                const data = [];\n                const cities = ['上海', '北京', '广州', '深圳', '南京', '西安', '成都'];\n                const pinyin = ['shanghai', 'beijing', 'guangzhou', 'shenzhen', 'nanjing', 'xian', 'chengdu'];\n                cities.forEach((city, index) => {\n                    data.push({\n                        label: city,\n                        key: index,\n                        pinyin: pinyin[index]\n                    });\n                });\n                return data;\n            };\n            const generateEntity = _ => {\n                const data = [];\n                var cities = ['上海', '北京', '广州', '深圳', '南京', '西安', '成都'];\n                const pinyin = ['shanghai', 'beijing', 'guangzhou', 'shenzhen', 'nanjing', 'xian', 'chengdu'];\n\n                axios.get('http://10.60.38.137:9999/api/getAllLabel')\n                    .then((response) => {\n                        cities = response.data.Label;\n                        this.allEntity = cities;\n                        this.allProperty = cities;\n                        cities.forEach((city, index) => {\n                            data.push({\n                                label: city,\n                                key: index,\n                                pinyin: pinyin[index]\n                            });\n                        });\n                    })\n\n                return data;\n            };\n            const generateProperty = _ => {\n                const data = [];\n                const cities = ['上海', '北京', '广州', '深圳', '南京', '西安', '成都'];\n                const pinyin = ['shanghai', 'beijing', 'guangzhou', 'shenzhen', 'nanjing', 'xian', 'chengdu'];\n                cities.forEach((city, index) => {\n                    data.push({\n                        label: city,\n                        key: index,\n                        pinyin: pinyin[index]\n                    });\n                });\n                return data;\n            };\n            return {\n                // data2: generateData2(),\n                form: {\n                    entity: [],\n                    relation: '',\n                    property: [],\n                    csv: 'result.csv'\n                },\n                entityOptions: [],\n                properties: [],\n                allEntityIndexed: generateEntity(),\n                allPropertyIndexed: generateProperty(),\n                allEntity: ['上海', '北京', '广州', '深圳', '南京', '西安', '成都'],\n                allProperty: ['上海', '北京', '广州', '深圳', '南京', '西安', '成都'],\n                entity: [],\n                property: [],\n                selectedOptions: [],\n                filterMethod(query, item) {\n                    console.log(item)\n                    return item.pinyin.indexOf(query) > -1;\n                },\n                tableData4: [{\n                    date: '2016-05-03',\n                    name: '王小虎',\n                    province: '上海',\n                    city: '普陀区',\n                    address: '上海市普陀区金沙江路 1518 弄',\n                    zip: 200333\n                }, {\n                    date: '2016-05-02',\n                    name: '王小虎',\n                    province: '上海',\n                    city: '普陀区',\n                    address: '上海市普陀区金沙江路 1518 弄',\n                    zip: 200333\n                }, {\n                    date: '2016-05-04',\n                    name: '王小虎',\n                    province: '上海',\n                    city: '普陀区',\n                    address: '上海市普陀区金沙江路 1518 弄',\n                    zip: 200333\n                }, {\n                    date: '2016-05-01',\n                    name: '王小虎',\n                    province: '上海',\n                    city: '普陀区',\n                    address: '上海市普陀区金沙江路 1518 弄',\n                    zip: 200333\n                }, {\n                    date: '2016-05-08',\n                    name: '王小虎',\n                    province: '上海',\n                    city: '普陀区',\n                    address: '上海市普陀区金沙江路 1518 弄',\n                    zip: 200333\n                }, {\n                    date: '2016-05-06',\n                    name: '王小虎',\n                    province: '上海',\n                    city: '普陀区',\n                    address: '上海市普陀区金沙江路 1518 弄',\n                    zip: 200333\n                }, {\n                    date: '2016-05-07',\n                    name: '王小虎',\n                    province: '上海',\n                    city: '普陀区',\n                    address: '上海市普陀区金沙江路 1518 弄',\n                    zip: 200333\n                }],\n\n                options4: [],\n                csvOptions: [],\n                datasetOptions: [],\n                value9: [],\n                list: [],\n                loading: false,\n                states: [\"Alabama\", \"Alaska\", \"Arizona\",\n                    \"Arkansas\", \"California\", \"Colorado\",\n                    \"Connecticut\", \"Delaware\", \"Florida\",\n                    \"Georgia\", \"Hawaii\", \"Idaho\", \"Illinois\",\n                    \"Indiana\", \"Iowa\", \"Kansas\", \"Kentucky\",\n                    \"Louisiana\", \"Maine\", \"Maryland\",\n                    \"Massachusetts\", \"Michigan\", \"Minnesota\",\n                    \"Mississippi\", \"Missouri\", \"Montana\",\n                    \"Nebraska\", \"Nevada\", \"New Hampshire\",\n                    \"New Jersey\", \"New Mexico\", \"New York\",\n                    \"North Carolina\", \"North Dakota\", \"Ohio\",\n                    \"Oklahoma\", \"Oregon\", \"Pennsylvania\",\n                    \"Rhode Island\", \"South Carolina\",\n                    \"South Dakota\", \"Tennessee\", \"Texas\",\n                    \"Utah\", \"Vermont\", \"Virginia\",\n                    \"Washington\", \"West Virginia\", \"Wisconsin\",\n                    \"Wyoming\"\n                ]\n            }\n        },\n\n        methods: {\n            handleEntityChange(value) {\n\n            },\n            deleteRow(index, rows) {\n                rows.splice(index, 1);\n            },\n            onDatasetChange(value) {\n\n\n                axios.get('http://10.60.38.137:9999/api/metricInfo?filename=' + value)\n                    .then((response) => {\n                        var Container = response.data.Node;\n                        let entity = [];\n                        let firstCasc = {\n                            label: value,\n                            value: value\n                        }\n                        firstCasc.children = []\n\n                        Container.name.forEach(element => {\n                            let secondCasc = {};\n                            secondCasc.label = element\n                            secondCasc.value = element\n\n                            secondCasc.children = [];\n\n                            for (const key in response.data) {\n                                if (response.data.hasOwnProperty(key)) {\n                                    if (key == element) {\n                                        const containerElement = response.data[key];\n                                        let service = containerElement.place;\n                                        service.forEach(element => {\n                                            entity.push(element);\n                                        });\n\n                                        delete containerElement.place;\n\n\n                                        for (const key in containerElement) {\n                                            if (containerElement.hasOwnProperty(key)) {\n                                                const element = containerElement[key];\n                                                let thirdCasc = {}\n                                                thirdCasc.label = key;\n                                                thirdCasc.value = key;\n                                                thirdCasc.children = element;\n\n                                                console.log(thirdCasc)\n\n                                                let tempChildren = []\n\n                                                thirdCasc.children.forEach(element => {\n                                                    let temp = {}\n                                                    temp.label = element;\n                                                    temp.value = element;\n                                                    tempChildren.push(temp)\n\n                                                });\n\n                                                thirdCasc.children = tempChildren;\n                                                console.log(thirdCasc)\n\n                                                // console.log(children)\n                                                secondCasc.children.push(thirdCasc);\n                                            }\n                                        }\n\n                                    }\n                                }\n                            }\n                            firstCasc.children.push(secondCasc)\n                        });\n\n                        let tempEntity = []\n                        entity.forEach(element => {\n                            tempEntity.push({\n                                label: element,\n                                value: element,\n                            })\n                        });\n\n                        // this.form.entity = tempEntity;\n                        this.options4 = tempEntity;\n                        this.properties = [firstCasc];\n                    })\n\n\n\n\n            },\n            onSubmit() {\n                let csv = ''\n                this.datasetOptions.forEach(element => {\n                    if (element.value.indexOf(this.form.csv) > -1) {\n                        csv = element.value\n                    }\n                })\n\n                axios.post(\n                        'http://10.60.38.137:9999/api/addMetric?pod=' + this.form.property[2] + '&metric=' +\n                        this.form\n                        .property[\n                            3] + '&Type=' + this.form.property[1] + '&dateset=' + csv +\n                        '&relation=' + this.form.relation + '&nodeType=' + this.form.entity[0] + '&nodeName=' + this.form\n                        .entity[1]\n                    ).then((response) => {\n                        let log = response.data.state;\n                        this.$message({\n                            message: log,\n                            type: 'success'\n                        });\n                        this.tableData4.push({\n                            entity: this.form.entity,\n                            property: this.form.property[3],\n                            relation: this.form.relation\n                        });\n                    })\n                    .catch((error) => {\n                        // handle error\n                        console.log(error);\n                        this.$message.error('出现错误，请稍后再试。');\n\n                    })\n            },\n            onCancel() {\n                this.form = {\n                    entity: [],\n                    relation: '',\n                    property: [],\n                    csv: ''\n                }\n            },\n            transferClick() {\n                this.entity.forEach(elementE => {\n                    this.property.forEach(elementP => {\n                        this.tableData4.push({\n                            entity: this.allEntity[elementE],\n                            property: this.allProperty[elementP]\n                        })\n                    });\n                });\n            },\n            remoteMethod(query) {\n                if (query !== '') {\n                    this.loading = true;\n                    setTimeout(() => {\n                        this.loading = false;\n                        this.options4 = this.list.filter(item => {\n                            return item.label.toLowerCase()\n                                .indexOf(query.toLowerCase()) > -1;\n                        });\n                    }, 200);\n                } else {\n                    this.options4 = [];\n                }\n            },\n            handleChange(value) {\n                console.log(value);\n            }\n        },\n        created() {\n            this.tableData4 = [];\n            // this.form.property =\n            axios.get('http://10.60.38.137:9999/api/getCSV')\n                .then((response) => {\n                    response.data.CSV.forEach(element => {\n                        this.csvOptions.push({\n                            label: element,\n                            value: element\n                        })\n                    });\n\n                    axios.get('http://10.60.38.137:9999/api/metricInfo?filename=' + this.csvOptions[0].label)\n                        .then((response) => {\n                            var Container = response.data.Node;\n                            let entity = [];\n                            let firstCasc = {\n                                label: this.csvOptions[0].label,\n                                value: this.csvOptions[0].label\n                            }\n                            firstCasc.children = []\n\n                            Container.name.forEach(element => {\n                                let secondCasc = {};\n                                secondCasc.label = element\n                                secondCasc.value = element\n\n                                secondCasc.children = [];\n\n                                for (const key in response.data) {\n                                    if (response.data.hasOwnProperty(key)) {\n                                        if (key == element) {\n                                            const containerElement = response.data[key];\n                                            let service = containerElement.place;\n                                            service.forEach(element => {\n                                                entity.push(element);\n                                            });\n\n                                            delete containerElement.place;\n\n\n                                            for (const key in containerElement) {\n                                                if (containerElement.hasOwnProperty(key)) {\n                                                    const element = containerElement[key];\n                                                    let thirdCasc = {}\n                                                    thirdCasc.label = key;\n                                                    thirdCasc.value = key;\n                                                    thirdCasc.children = element;\n\n                                                    let tempChildren = []\n\n                                                    thirdCasc.children.forEach(element => {\n                                                        let temp = {}\n                                                        temp.label = element;\n                                                        temp.value = element;\n                                                        tempChildren.push(temp)\n\n                                                    });\n\n                                                    thirdCasc.children = tempChildren;\n                                                    console.log(thirdCasc)\n\n                                                    // console.log(children)\n                                                    secondCasc.children.push(thirdCasc);\n                                                }\n                                            }\n\n                                        }\n                                    }\n                                }\n                                firstCasc.children.push(secondCasc)\n                            });\n\n                            let tempEntity = []\n                            entity.forEach(element => {\n                                tempEntity.push({\n                                    label: element,\n                                    value: element,\n                                })\n                            });\n\n                            // this.form.entity = tempEntity;\n                            this.options4 = tempEntity;\n                            this.properties = [firstCasc];\n                        })\n\n                })\n\n            axios.get('http://10.60.38.137:9999/api/getDataset')\n                .then((response) => {\n                    response.data.nodes.forEach(element => {\n                        this.datasetOptions.push({\n                            label: element.name,\n                            value: element.name\n                        })\n                    });\n                })\n\n            let initDeploymentNode = () => {\n                return axios.get('http://10.60.38.137:9999/api/getLabel?label=Deployment_Node');\n            }\n            let initServiceNode = () => {\n                return axios.get('http://10.60.38.137:9999/api/getLabel?label=Service_Node');\n            }\n            let initContainerNode = () => {\n                return axios.get('http://10.60.38.137:9999/api/getLabel?label=Container_Node');\n            }\n\n            axios.all([initDeploymentNode(), initServiceNode(), initContainerNode()])\n                .then(axios.spread((responseDeployment, responseService, responseContainer) => {\n                    let deployChildren = []\n                    responseDeployment.data.nodes.forEach(element => {\n                        if (element.type == 'Deployment_Node') {\n                            deployChildren.push({\n                                value: element.name,\n                                label: element.name\n                            })\n                        }\n\n                    });\n                    let serviceChildren = []\n                    responseService.data.nodes.forEach(element => {\n                        if (element.type == 'Service_Node') {\n                            serviceChildren.push({\n                                value: element.name,\n                                label: element.name\n                            })\n                        }\n\n                    });\n                    let containerChildren = []\n                    responseContainer.data.nodes.forEach(element => {\n                        if (element.type == 'Container_Node') {\n                            containerChildren.push({\n                                value: element.name,\n                                label: element.name\n                            })\n                        }\n\n                    });\n                    console.log(deployChildren)\n                    console.log(serviceChildren)\n                    console.log(containerChildren)\n                    this.entityOptions = [{\n                        value: 'Deployment_Node',\n                        label: 'Deployment Node',\n                        children: deployChildren\n                    }, {\n                        value: 'Service_Node',\n                        label: 'Service Node',\n                        children: serviceChildren\n                    }, {\n                        value: 'Container_Node',\n                        label: 'Container Node',\n                        children: containerChildren\n                    }]\n                    console.log(this.entityOptions)\n                }))\n\n\n\n        },\n        mounted() {\n            this.list = this.states.map(item => {\n                return {\n                    value: item,\n                    label: item\n                };\n            });\n        },\n\n    }\n</script>"],"sourceRoot":"src/views"}]}