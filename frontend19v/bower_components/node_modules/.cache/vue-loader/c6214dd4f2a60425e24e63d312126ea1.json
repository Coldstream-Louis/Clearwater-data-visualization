{"remainingRequest":"/Users/chenyulei/Downloads/frontend18v/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/chenyulei/Downloads/frontend18v/src/views/EnterRel.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/chenyulei/Downloads/frontend18v/src/views/EnterRel.vue","mtime":1553056840961},{"path":"/Users/chenyulei/Downloads/frontend18v/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/chenyulei/Downloads/frontend18v/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chenyulei/Downloads/frontend18v/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nconst axios = require('axios')\nexport default {\n    name: 'EnterRel',\n    data() {\n        const generateData2 = _ => {\n            const data = [];\n            const cities = ['上海', '北京', '广州', '深圳', '南京', '西安', '成都'];\n            const pinyin = ['shanghai', 'beijing', 'guangzhou', 'shenzhen', 'nanjing', 'xian', 'chengdu'];\n            cities.forEach((city, index) => {\n                data.push({\n                    label: city,\n                    key: index,\n                    pinyin: pinyin[index]\n                });\n            });\n            return data;\n        };\n        const generateEntity = _ => {\n            const data = [];\n            var cities = ['上海', '北京', '广州', '深圳', '南京', '西安', '成都'];\n            const pinyin = ['shanghai', 'beijing', 'guangzhou', 'shenzhen', 'nanjing', 'xian', 'chengdu'];\n\n            axios.get('http://10.60.38.137:9999/api/getAllLabel')\n                .then((response) => {\n                    cities = response.data.Label;\n                    this.allEntity = cities;\n                    this.allProperty = cities;\n                    cities.forEach((city, index) => {\n                        data.push({\n                            label: city,\n                            key: index,\n                            pinyin: pinyin[index]\n                        });\n                    });\n                })\n\n            return data;\n        };\n        const generateProperty = _ => {\n            const data = [];\n            const cities = ['上海', '北京', '广州', '深圳', '南京', '西安', '成都'];\n            const pinyin = ['shanghai', 'beijing', 'guangzhou', 'shenzhen', 'nanjing', 'xian', 'chengdu'];\n            cities.forEach((city, index) => {\n                data.push({\n                    label: city,\n                    key: index,\n                    pinyin: pinyin[index]\n                });\n            });\n            return data;\n        };\n        return {\n            // data2: generateData2(),\n            form: {\n                entity: [],\n                relation: '',\n                property: [],\n                csv: 'result.csv'\n            },\n            entityOptions: [],\n            properties: [],\n            allEntityIndexed: generateEntity(),\n            allPropertyIndexed: generateProperty(),\n            allEntity: ['上海', '北京', '广州', '深圳', '南京', '西安', '成都'],\n            allProperty: ['上海', '北京', '广州', '深圳', '南京', '西安', '成都'],\n            entity: [],\n            property: [],\n            selectedOptions: [],\n            filterMethod(query, item) {\n                console.log(item)\n                return item.pinyin.indexOf(query) > -1;\n            },\n            tableData4: [{\n                date: '2016-05-03',\n                name: '王小虎',\n                province: '上海',\n                city: '普陀区',\n                address: '上海市普陀区金沙江路 1518 弄',\n                zip: 200333\n            }, {\n                date: '2016-05-02',\n                name: '王小虎',\n                province: '上海',\n                city: '普陀区',\n                address: '上海市普陀区金沙江路 1518 弄',\n                zip: 200333\n            }, {\n                date: '2016-05-04',\n                name: '王小虎',\n                province: '上海',\n                city: '普陀区',\n                address: '上海市普陀区金沙江路 1518 弄',\n                zip: 200333\n            }, {\n                date: '2016-05-01',\n                name: '王小虎',\n                province: '上海',\n                city: '普陀区',\n                address: '上海市普陀区金沙江路 1518 弄',\n                zip: 200333\n            }, {\n                date: '2016-05-08',\n                name: '王小虎',\n                province: '上海',\n                city: '普陀区',\n                address: '上海市普陀区金沙江路 1518 弄',\n                zip: 200333\n            }, {\n                date: '2016-05-06',\n                name: '王小虎',\n                province: '上海',\n                city: '普陀区',\n                address: '上海市普陀区金沙江路 1518 弄',\n                zip: 200333\n            }, {\n                date: '2016-05-07',\n                name: '王小虎',\n                province: '上海',\n                city: '普陀区',\n                address: '上海市普陀区金沙江路 1518 弄',\n                zip: 200333\n            }],\n\n            options4: [],\n            csvOptions: [],\n            datasetOptions: [],\n            value9: [],\n            list: [],\n            loading: false,\n            states: [\"Alabama\", \"Alaska\", \"Arizona\",\n                \"Arkansas\", \"California\", \"Colorado\",\n                \"Connecticut\", \"Delaware\", \"Florida\",\n                \"Georgia\", \"Hawaii\", \"Idaho\", \"Illinois\",\n                \"Indiana\", \"Iowa\", \"Kansas\", \"Kentucky\",\n                \"Louisiana\", \"Maine\", \"Maryland\",\n                \"Massachusetts\", \"Michigan\", \"Minnesota\",\n                \"Mississippi\", \"Missouri\", \"Montana\",\n                \"Nebraska\", \"Nevada\", \"New Hampshire\",\n                \"New Jersey\", \"New Mexico\", \"New York\",\n                \"North Carolina\", \"North Dakota\", \"Ohio\",\n                \"Oklahoma\", \"Oregon\", \"Pennsylvania\",\n                \"Rhode Island\", \"South Carolina\",\n                \"South Dakota\", \"Tennessee\", \"Texas\",\n                \"Utah\", \"Vermont\", \"Virginia\",\n                \"Washington\", \"West Virginia\", \"Wisconsin\",\n                \"Wyoming\"\n            ]\n        }\n    },\n\n    methods: {\n        handleEntityChange(value) {\n\n        },\n        deleteRow(index, rows) {\n            rows.splice(index, 1);\n        },\n        onDatasetChange(value) {\n\n\n            axios.get('http://10.60.38.137:9999/api/metricInfo?filename=' + value)\n                .then((response) => {\n                    var Container = response.data.Node;\n                    let entity = [];\n                    let firstCasc = {\n                        label: value,\n                        value: value\n                    }\n                    firstCasc.children = []\n\n                    Container.name.forEach(element => {\n                        let secondCasc = {};\n                        secondCasc.label = element\n                        secondCasc.value = element\n\n                        secondCasc.children = [];\n\n                        for (const key in response.data) {\n                            if (response.data.hasOwnProperty(key)) {\n                                if (key == element) {\n                                    const containerElement = response.data[key];\n                                    let service = containerElement.place;\n                                    service.forEach(element => {\n                                        entity.push(element);\n                                    });\n\n                                    delete containerElement.place;\n\n\n                                    for (const key in containerElement) {\n                                        if (containerElement.hasOwnProperty(key)) {\n                                            const element = containerElement[key];\n                                            let thirdCasc = {}\n                                            thirdCasc.label = key;\n                                            thirdCasc.value = key;\n                                            thirdCasc.children = element;\n\n                                            console.log(thirdCasc)\n\n                                            let tempChildren = []\n\n                                            thirdCasc.children.forEach(element => {\n                                                let temp = {}\n                                                temp.label = element;\n                                                temp.value = element;\n                                                tempChildren.push(temp)\n\n                                            });\n\n                                            thirdCasc.children = tempChildren;\n                                            console.log(thirdCasc)\n\n                                            // console.log(children)\n                                            secondCasc.children.push(thirdCasc);\n                                        }\n                                    }\n\n                                }\n                            }\n                        }\n                        firstCasc.children.push(secondCasc)\n                    });\n\n                    let tempEntity = []\n                    entity.forEach(element => {\n                        tempEntity.push({\n                            label: element,\n                            value: element,\n                        })\n                    });\n\n                    // this.form.entity = tempEntity;\n                    this.options4 = tempEntity;\n                    this.properties = [firstCasc];\n                })\n\n\n\n\n        },\n        onSubmit() {\n            let csv = ''\n            this.datasetOptions.forEach(element => {\n                if (element.value.indexOf(this.form.csv) > -1) {\n                    csv = element.value\n                }\n            })\n\n            axios.post(\n                    'http://10.60.38.137:9999/api/addMetric?pod=' + this.form.property[2] + '&metric=' +\n                    this.form\n                    .property[\n                        3] + '&Type=' + this.form.property[1] + '&dateset=' + csv +\n                    '&relation=' + this.form.relation + '&nodeType=' + this.form.entity[0] + '&nodeName=' + this.form\n                    .entity[1]\n                ).then((response) => {\n                    let log = response.data.state;\n                    this.$message({\n                        message: log,\n                        type: 'success'\n                    });\n                    this.tableData4.push({\n                        entity: this.form.entity,\n                        property: this.form.property[3],\n                        relation: this.form.relation\n                    });\n                })\n                .catch((error) => {\n                    // handle error\n                    console.log(error);\n                    this.$message.error('出现错误，请稍后再试。');\n\n                })\n        },\n        onCancel() {\n            this.form = {\n                entity: [],\n                relation: '',\n                property: [],\n                csv: ''\n            }\n        },\n        transferClick() {\n            this.entity.forEach(elementE => {\n                this.property.forEach(elementP => {\n                    this.tableData4.push({\n                        entity: this.allEntity[elementE],\n                        property: this.allProperty[elementP]\n                    })\n                });\n            });\n        },\n        remoteMethod(query) {\n            if (query !== '') {\n                this.loading = true;\n                setTimeout(() => {\n                    this.loading = false;\n                    this.options4 = this.list.filter(item => {\n                        return item.label.toLowerCase()\n                            .indexOf(query.toLowerCase()) > -1;\n                    });\n                }, 200);\n            } else {\n                this.options4 = [];\n            }\n        },\n        handleChange(value) {\n            console.log(value);\n        }\n    },\n    created() {\n        this.tableData4 = [];\n        // this.form.property =\n        axios.get('http://10.60.38.137:9999/api/getCSV')\n            .then((response) => {\n                response.data.CSV.forEach(element => {\n                    this.csvOptions.push({\n                        label: element,\n                        value: element\n                    })\n                });\n\n                axios.get('http://10.60.38.137:9999/api/metricInfo?filename=' + this.csvOptions[0].label)\n                    .then((response) => {\n                        var Container = response.data.Node;\n                        let entity = [];\n                        let firstCasc = {\n                            label: this.csvOptions[0].label,\n                            value: this.csvOptions[0].label\n                        }\n                        firstCasc.children = []\n\n                        Container.name.forEach(element => {\n                            let secondCasc = {};\n                            secondCasc.label = element\n                            secondCasc.value = element\n\n                            secondCasc.children = [];\n\n                            for (const key in response.data) {\n                                if (response.data.hasOwnProperty(key)) {\n                                    if (key == element) {\n                                        const containerElement = response.data[key];\n                                        let service = containerElement.place;\n                                        service.forEach(element => {\n                                            entity.push(element);\n                                        });\n\n                                        delete containerElement.place;\n\n\n                                        for (const key in containerElement) {\n                                            if (containerElement.hasOwnProperty(key)) {\n                                                const element = containerElement[key];\n                                                let thirdCasc = {}\n                                                thirdCasc.label = key;\n                                                thirdCasc.value = key;\n                                                thirdCasc.children = element;\n\n                                                let tempChildren = []\n\n                                                thirdCasc.children.forEach(element => {\n                                                    let temp = {}\n                                                    temp.label = element;\n                                                    temp.value = element;\n                                                    tempChildren.push(temp)\n\n                                                });\n\n                                                thirdCasc.children = tempChildren;\n                                                console.log(thirdCasc)\n\n                                                // console.log(children)\n                                                secondCasc.children.push(thirdCasc);\n                                            }\n                                        }\n\n                                    }\n                                }\n                            }\n                            firstCasc.children.push(secondCasc)\n                        });\n\n                        let tempEntity = []\n                        entity.forEach(element => {\n                            tempEntity.push({\n                                label: element,\n                                value: element,\n                            })\n                        });\n\n                        // this.form.entity = tempEntity;\n                        this.options4 = tempEntity;\n                        this.properties = [firstCasc];\n                    })\n\n            })\n\n        axios.get('http://10.60.38.137:9999/api/getDataset')\n            .then((response) => {\n                response.data.nodes.forEach(element => {\n                    this.datasetOptions.push({\n                        label: element.name,\n                        value: element.name\n                    })\n                });\n            })\n\n        let initDeploymentNode = () => {\n            return axios.get('http://10.60.38.137:9999/api/getLabel?label=Deployment_Node');\n        }\n        let initServiceNode = () => {\n            return axios.get('http://10.60.38.137:9999/api/getLabel?label=Service_Node');\n        }\n        let initContainerNode = () => {\n            return axios.get('http://10.60.38.137:9999/api/getLabel?label=Container_Node');\n        }\n\n        axios.all([initDeploymentNode(), initServiceNode(), initContainerNode()])\n            .then(axios.spread((responseDeployment, responseService, responseContainer) => {\n                let deployChildren = []\n                responseDeployment.data.nodes.forEach(element => {\n                    if (element.type == 'Deployment_Node') {\n                        deployChildren.push({\n                            value: element.name,\n                            label: element.name\n                        })\n                    }\n\n                });\n                let serviceChildren = []\n                responseService.data.nodes.forEach(element => {\n                    if (element.type == 'Service_Node') {\n                        serviceChildren.push({\n                            value: element.name,\n                            label: element.name\n                        })\n                    }\n\n                });\n                let containerChildren = []\n                responseContainer.data.nodes.forEach(element => {\n                    if (element.type == 'Container_Node') {\n                        containerChildren.push({\n                            value: element.name,\n                            label: element.name\n                        })\n                    }\n\n                });\n                console.log(deployChildren)\n                console.log(serviceChildren)\n                console.log(containerChildren)\n                this.entityOptions = [{\n                    value: 'Deployment_Node',\n                    label: 'Deployment Node',\n                    children: deployChildren\n                }, {\n                    value: 'Service_Node',\n                    label: 'Service Node',\n                    children: serviceChildren\n                }, {\n                    value: 'Container_Node',\n                    label: 'Container Node',\n                    children: containerChildren\n                }]\n                console.log(this.entityOptions)\n            }))\n\n\n\n    },\n    mounted() {\n        this.list = this.states.map(item => {\n            return {\n                value: item,\n                label: item\n            };\n        });\n    },\n\n}\n",{"version":3,"sources":["EnterRel.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmfile":"EnterRel.vue","sourceRoot":"src/views","sourcesContent":["<template>\n    <el-container style=\"padding:30px;\">\n        <el-row :gutter=\"20\" style=\"width:100%\">\n            <el-col :span=\"10\">\n                <!-- <el-row>\n                    <el-transfer filterable :filter-method=\"filterMethod\" filter-placeholder=\"请输入实体拼音\" v-model=\"entity\"\n                        :data=\"allEntityIndexed\" :titles=\"['Entities', 'Selected']\">\n                    </el-transfer>\n                </el-row>\n\n                <el-row style=\"margin-top:30px;\">\n                    <el-transfer filterable :filter-method=\"filterMethod\" filter-placeholder=\"请输入属性拼音\" v-model=\"property\"\n                        :data=\"allEntityIndexed\" :titles=\"['Properties', 'Selected']\">\n                        \n                    </el-transfer>\n                </el-row> -->\n                <el-form ref=\"form\" :model=\"form\" label-width=\"100px\">\n                    <el-form-item label=\"选择数据集\">\n                        <el-select v-model=\"form.csv\" placeholder=\"请选择\" @change=\"onDatasetChange\">\n                            <el-option v-for=\"item in csvOptions\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\">\n                            </el-option>\n                        </el-select>\n                    </el-form-item>\n                    <el-form-item label=\"实体名称\">\n                        <!-- <el-select v-model=\"form.entity\" filterable remote reserve-keyword placeholder=\"请输入关键词\"\n                            :remote-method=\"remoteMethod\" :loading=\"loading\">\n                            <el-option v-for=\"item in options4\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\">\n                            </el-option>\n                        </el-select> -->\n                        <el-cascader expand-trigger=\"hover\" :options=\"entityOptions\" v-model=\"form.entity\" @change=\"handleEntityChange\">\n                        </el-cascader>\n                    </el-form-item>\n                    <el-form-item label=\"属性名称\">\n                        <!-- <el-select v-model=\"form.property\" multiple filterable remote reserve-keyword placeholder=\"请输入关键词\"\n                            :remote-method=\"remoteMethod\" :loading=\"loading\">\n                            <el-option v-for=\"item in options4\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\">\n                            </el-option>\n                        </el-select> -->\n                        <el-cascader expand-trigger=\"hover\" :options=\"properties\" v-model=\"form.property\" @change=\"handleChange\">\n                        </el-cascader>\n                    </el-form-item>\n                    <el-form-item label=\"关系\">\n                        <el-input placeholder=\"请输入关系\" v-model=\"form.relation\" clearable>\n                        </el-input>\n                    </el-form-item>\n                    <el-form-item>\n                        <el-button type=\"primary\" @click=\"onSubmit\">添加</el-button>\n                        <el-button @click=\"onCancel\">取消</el-button>\n                    </el-form-item>\n                </el-form>\n            </el-col>\n\n            <!-- <el-col :span=\"2\" style=\"height:100%\">\n                <el-button type=\"success\" icon=\"el-icon-check\" circle style=\"margin-top:200px\" @click=\"transferClick\"></el-button>\n            </el-col> -->\n\n            <el-col :span=\"12\" :offset=\"2\">\n                <el-table :data=\"tableData4\" style=\"width: 100%\" max-height=\"500\">\n                    <el-table-column prop=\"entity\" label=\"实体\" width=\"100\">\n                    </el-table-column>\n                    <el-table-column prop=\"property\" label=\"属性\" width=\"200\">\n                    </el-table-column>\n                    <el-table-column prop=\"relation\" label=\"关系\" width=\"150\">\n                    </el-table-column>\n                    <el-table-column fixed=\"right\" label=\"操作\" width=\"120\">\n                        <template slot-scope=\"scope\">\n                            <el-button @click.native.prevent=\"deleteRow(scope.$index, tableData4)\" type=\"text\" size=\"small\">\n                                移除\n                            </el-button>\n                        </template>\n                    </el-table-column>\n                </el-table>\n            </el-col>\n        </el-row>\n\n    </el-container>\n\n</template>\n\n<style scoped>\n</style>\n\n<script>\n    const axios = require('axios')\n    export default {\n        name: 'EnterRel',\n        data() {\n            const generateData2 = _ => {\n                const data = [];\n                const cities = ['上海', '北京', '广州', '深圳', '南京', '西安', '成都'];\n                const pinyin = ['shanghai', 'beijing', 'guangzhou', 'shenzhen', 'nanjing', 'xian', 'chengdu'];\n                cities.forEach((city, index) => {\n                    data.push({\n                        label: city,\n                        key: index,\n                        pinyin: pinyin[index]\n                    });\n                });\n                return data;\n            };\n            const generateEntity = _ => {\n                const data = [];\n                var cities = ['上海', '北京', '广州', '深圳', '南京', '西安', '成都'];\n                const pinyin = ['shanghai', 'beijing', 'guangzhou', 'shenzhen', 'nanjing', 'xian', 'chengdu'];\n\n                axios.get('http://10.60.38.137:9999/api/getAllLabel')\n                    .then((response) => {\n                        cities = response.data.Label;\n                        this.allEntity = cities;\n                        this.allProperty = cities;\n                        cities.forEach((city, index) => {\n                            data.push({\n                                label: city,\n                                key: index,\n                                pinyin: pinyin[index]\n                            });\n                        });\n                    })\n\n                return data;\n            };\n            const generateProperty = _ => {\n                const data = [];\n                const cities = ['上海', '北京', '广州', '深圳', '南京', '西安', '成都'];\n                const pinyin = ['shanghai', 'beijing', 'guangzhou', 'shenzhen', 'nanjing', 'xian', 'chengdu'];\n                cities.forEach((city, index) => {\n                    data.push({\n                        label: city,\n                        key: index,\n                        pinyin: pinyin[index]\n                    });\n                });\n                return data;\n            };\n            return {\n                // data2: generateData2(),\n                form: {\n                    entity: [],\n                    relation: '',\n                    property: [],\n                    csv: 'result.csv'\n                },\n                entityOptions: [],\n                properties: [],\n                allEntityIndexed: generateEntity(),\n                allPropertyIndexed: generateProperty(),\n                allEntity: ['上海', '北京', '广州', '深圳', '南京', '西安', '成都'],\n                allProperty: ['上海', '北京', '广州', '深圳', '南京', '西安', '成都'],\n                entity: [],\n                property: [],\n                selectedOptions: [],\n                filterMethod(query, item) {\n                    console.log(item)\n                    return item.pinyin.indexOf(query) > -1;\n                },\n                tableData4: [{\n                    date: '2016-05-03',\n                    name: '王小虎',\n                    province: '上海',\n                    city: '普陀区',\n                    address: '上海市普陀区金沙江路 1518 弄',\n                    zip: 200333\n                }, {\n                    date: '2016-05-02',\n                    name: '王小虎',\n                    province: '上海',\n                    city: '普陀区',\n                    address: '上海市普陀区金沙江路 1518 弄',\n                    zip: 200333\n                }, {\n                    date: '2016-05-04',\n                    name: '王小虎',\n                    province: '上海',\n                    city: '普陀区',\n                    address: '上海市普陀区金沙江路 1518 弄',\n                    zip: 200333\n                }, {\n                    date: '2016-05-01',\n                    name: '王小虎',\n                    province: '上海',\n                    city: '普陀区',\n                    address: '上海市普陀区金沙江路 1518 弄',\n                    zip: 200333\n                }, {\n                    date: '2016-05-08',\n                    name: '王小虎',\n                    province: '上海',\n                    city: '普陀区',\n                    address: '上海市普陀区金沙江路 1518 弄',\n                    zip: 200333\n                }, {\n                    date: '2016-05-06',\n                    name: '王小虎',\n                    province: '上海',\n                    city: '普陀区',\n                    address: '上海市普陀区金沙江路 1518 弄',\n                    zip: 200333\n                }, {\n                    date: '2016-05-07',\n                    name: '王小虎',\n                    province: '上海',\n                    city: '普陀区',\n                    address: '上海市普陀区金沙江路 1518 弄',\n                    zip: 200333\n                }],\n\n                options4: [],\n                csvOptions: [],\n                datasetOptions: [],\n                value9: [],\n                list: [],\n                loading: false,\n                states: [\"Alabama\", \"Alaska\", \"Arizona\",\n                    \"Arkansas\", \"California\", \"Colorado\",\n                    \"Connecticut\", \"Delaware\", \"Florida\",\n                    \"Georgia\", \"Hawaii\", \"Idaho\", \"Illinois\",\n                    \"Indiana\", \"Iowa\", \"Kansas\", \"Kentucky\",\n                    \"Louisiana\", \"Maine\", \"Maryland\",\n                    \"Massachusetts\", \"Michigan\", \"Minnesota\",\n                    \"Mississippi\", \"Missouri\", \"Montana\",\n                    \"Nebraska\", \"Nevada\", \"New Hampshire\",\n                    \"New Jersey\", \"New Mexico\", \"New York\",\n                    \"North Carolina\", \"North Dakota\", \"Ohio\",\n                    \"Oklahoma\", \"Oregon\", \"Pennsylvania\",\n                    \"Rhode Island\", \"South Carolina\",\n                    \"South Dakota\", \"Tennessee\", \"Texas\",\n                    \"Utah\", \"Vermont\", \"Virginia\",\n                    \"Washington\", \"West Virginia\", \"Wisconsin\",\n                    \"Wyoming\"\n                ]\n            }\n        },\n\n        methods: {\n            handleEntityChange(value) {\n\n            },\n            deleteRow(index, rows) {\n                rows.splice(index, 1);\n            },\n            onDatasetChange(value) {\n\n\n                axios.get('http://10.60.38.137:9999/api/metricInfo?filename=' + value)\n                    .then((response) => {\n                        var Container = response.data.Node;\n                        let entity = [];\n                        let firstCasc = {\n                            label: value,\n                            value: value\n                        }\n                        firstCasc.children = []\n\n                        Container.name.forEach(element => {\n                            let secondCasc = {};\n                            secondCasc.label = element\n                            secondCasc.value = element\n\n                            secondCasc.children = [];\n\n                            for (const key in response.data) {\n                                if (response.data.hasOwnProperty(key)) {\n                                    if (key == element) {\n                                        const containerElement = response.data[key];\n                                        let service = containerElement.place;\n                                        service.forEach(element => {\n                                            entity.push(element);\n                                        });\n\n                                        delete containerElement.place;\n\n\n                                        for (const key in containerElement) {\n                                            if (containerElement.hasOwnProperty(key)) {\n                                                const element = containerElement[key];\n                                                let thirdCasc = {}\n                                                thirdCasc.label = key;\n                                                thirdCasc.value = key;\n                                                thirdCasc.children = element;\n\n                                                console.log(thirdCasc)\n\n                                                let tempChildren = []\n\n                                                thirdCasc.children.forEach(element => {\n                                                    let temp = {}\n                                                    temp.label = element;\n                                                    temp.value = element;\n                                                    tempChildren.push(temp)\n\n                                                });\n\n                                                thirdCasc.children = tempChildren;\n                                                console.log(thirdCasc)\n\n                                                // console.log(children)\n                                                secondCasc.children.push(thirdCasc);\n                                            }\n                                        }\n\n                                    }\n                                }\n                            }\n                            firstCasc.children.push(secondCasc)\n                        });\n\n                        let tempEntity = []\n                        entity.forEach(element => {\n                            tempEntity.push({\n                                label: element,\n                                value: element,\n                            })\n                        });\n\n                        // this.form.entity = tempEntity;\n                        this.options4 = tempEntity;\n                        this.properties = [firstCasc];\n                    })\n\n\n\n\n            },\n            onSubmit() {\n                let csv = ''\n                this.datasetOptions.forEach(element => {\n                    if (element.value.indexOf(this.form.csv) > -1) {\n                        csv = element.value\n                    }\n                })\n\n                axios.post(\n                        'http://10.60.38.137:9999/api/addMetric?pod=' + this.form.property[2] + '&metric=' +\n                        this.form\n                        .property[\n                            3] + '&Type=' + this.form.property[1] + '&dateset=' + csv +\n                        '&relation=' + this.form.relation + '&nodeType=' + this.form.entity[0] + '&nodeName=' + this.form\n                        .entity[1]\n                    ).then((response) => {\n                        let log = response.data.state;\n                        this.$message({\n                            message: log,\n                            type: 'success'\n                        });\n                        this.tableData4.push({\n                            entity: this.form.entity,\n                            property: this.form.property[3],\n                            relation: this.form.relation\n                        });\n                    })\n                    .catch((error) => {\n                        // handle error\n                        console.log(error);\n                        this.$message.error('出现错误，请稍后再试。');\n\n                    })\n            },\n            onCancel() {\n                this.form = {\n                    entity: [],\n                    relation: '',\n                    property: [],\n                    csv: ''\n                }\n            },\n            transferClick() {\n                this.entity.forEach(elementE => {\n                    this.property.forEach(elementP => {\n                        this.tableData4.push({\n                            entity: this.allEntity[elementE],\n                            property: this.allProperty[elementP]\n                        })\n                    });\n                });\n            },\n            remoteMethod(query) {\n                if (query !== '') {\n                    this.loading = true;\n                    setTimeout(() => {\n                        this.loading = false;\n                        this.options4 = this.list.filter(item => {\n                            return item.label.toLowerCase()\n                                .indexOf(query.toLowerCase()) > -1;\n                        });\n                    }, 200);\n                } else {\n                    this.options4 = [];\n                }\n            },\n            handleChange(value) {\n                console.log(value);\n            }\n        },\n        created() {\n            this.tableData4 = [];\n            // this.form.property =\n            axios.get('http://10.60.38.137:9999/api/getCSV')\n                .then((response) => {\n                    response.data.CSV.forEach(element => {\n                        this.csvOptions.push({\n                            label: element,\n                            value: element\n                        })\n                    });\n\n                    axios.get('http://10.60.38.137:9999/api/metricInfo?filename=' + this.csvOptions[0].label)\n                        .then((response) => {\n                            var Container = response.data.Node;\n                            let entity = [];\n                            let firstCasc = {\n                                label: this.csvOptions[0].label,\n                                value: this.csvOptions[0].label\n                            }\n                            firstCasc.children = []\n\n                            Container.name.forEach(element => {\n                                let secondCasc = {};\n                                secondCasc.label = element\n                                secondCasc.value = element\n\n                                secondCasc.children = [];\n\n                                for (const key in response.data) {\n                                    if (response.data.hasOwnProperty(key)) {\n                                        if (key == element) {\n                                            const containerElement = response.data[key];\n                                            let service = containerElement.place;\n                                            service.forEach(element => {\n                                                entity.push(element);\n                                            });\n\n                                            delete containerElement.place;\n\n\n                                            for (const key in containerElement) {\n                                                if (containerElement.hasOwnProperty(key)) {\n                                                    const element = containerElement[key];\n                                                    let thirdCasc = {}\n                                                    thirdCasc.label = key;\n                                                    thirdCasc.value = key;\n                                                    thirdCasc.children = element;\n\n                                                    let tempChildren = []\n\n                                                    thirdCasc.children.forEach(element => {\n                                                        let temp = {}\n                                                        temp.label = element;\n                                                        temp.value = element;\n                                                        tempChildren.push(temp)\n\n                                                    });\n\n                                                    thirdCasc.children = tempChildren;\n                                                    console.log(thirdCasc)\n\n                                                    // console.log(children)\n                                                    secondCasc.children.push(thirdCasc);\n                                                }\n                                            }\n\n                                        }\n                                    }\n                                }\n                                firstCasc.children.push(secondCasc)\n                            });\n\n                            let tempEntity = []\n                            entity.forEach(element => {\n                                tempEntity.push({\n                                    label: element,\n                                    value: element,\n                                })\n                            });\n\n                            // this.form.entity = tempEntity;\n                            this.options4 = tempEntity;\n                            this.properties = [firstCasc];\n                        })\n\n                })\n\n            axios.get('http://10.60.38.137:9999/api/getDataset')\n                .then((response) => {\n                    response.data.nodes.forEach(element => {\n                        this.datasetOptions.push({\n                            label: element.name,\n                            value: element.name\n                        })\n                    });\n                })\n\n            let initDeploymentNode = () => {\n                return axios.get('http://10.60.38.137:9999/api/getLabel?label=Deployment_Node');\n            }\n            let initServiceNode = () => {\n                return axios.get('http://10.60.38.137:9999/api/getLabel?label=Service_Node');\n            }\n            let initContainerNode = () => {\n                return axios.get('http://10.60.38.137:9999/api/getLabel?label=Container_Node');\n            }\n\n            axios.all([initDeploymentNode(), initServiceNode(), initContainerNode()])\n                .then(axios.spread((responseDeployment, responseService, responseContainer) => {\n                    let deployChildren = []\n                    responseDeployment.data.nodes.forEach(element => {\n                        if (element.type == 'Deployment_Node') {\n                            deployChildren.push({\n                                value: element.name,\n                                label: element.name\n                            })\n                        }\n\n                    });\n                    let serviceChildren = []\n                    responseService.data.nodes.forEach(element => {\n                        if (element.type == 'Service_Node') {\n                            serviceChildren.push({\n                                value: element.name,\n                                label: element.name\n                            })\n                        }\n\n                    });\n                    let containerChildren = []\n                    responseContainer.data.nodes.forEach(element => {\n                        if (element.type == 'Container_Node') {\n                            containerChildren.push({\n                                value: element.name,\n                                label: element.name\n                            })\n                        }\n\n                    });\n                    console.log(deployChildren)\n                    console.log(serviceChildren)\n                    console.log(containerChildren)\n                    this.entityOptions = [{\n                        value: 'Deployment_Node',\n                        label: 'Deployment Node',\n                        children: deployChildren\n                    }, {\n                        value: 'Service_Node',\n                        label: 'Service Node',\n                        children: serviceChildren\n                    }, {\n                        value: 'Container_Node',\n                        label: 'Container Node',\n                        children: containerChildren\n                    }]\n                    console.log(this.entityOptions)\n                }))\n\n\n\n        },\n        mounted() {\n            this.list = this.states.map(item => {\n                return {\n                    value: item,\n                    label: item\n                };\n            });\n        },\n\n    }\n</script>"]}]}